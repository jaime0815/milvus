version: '3.5'

services:
  etcd:
    image: quay.io/coreos/etcd:v3.5.0
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -listen-peer-urls=http://127.0.0.1:2380 -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001 -initial-advertise-peer-urls=http://127.0.0.1:2380 --initial-cluster default=http://127.0.0.1:2380 --data-dir /etcd
    ports:
      - "2379:2379"
      - "2380:2380"
      - "4001:4001"

  pulsar:
    image: apachepulsar/pulsar:2.7.3
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/pulsar:/pulsar/data
    environment:
      # bin/apply-config-from-env.py script will modify the configuration file based on the environment variables
      # nettyMaxFrameSizeBytes must be calculated from maxMessageSize + 10240 (padding)
      - nettyMaxFrameSizeBytes=104867840 # this is 104857600 + 10240 (padding)
      - defaultRetentionTimeInMinutes=10080
      - defaultRetentionSizeInMB=8192
      # maxMessageSize is missing from standalone.conf, must use PULSAR_PREFIX_ to get it configured
      - PULSAR_PREFIX_maxMessageSize=104857600
      - PULSAR_GC=-XX:+UseG1GC
    command: |
      /bin/bash -c \
      "bin/apply-config-from-env.py conf/standalone.conf && \
      exec bin/pulsar standalone --no-functions-worker --no-stream-storage"
    ports:
      - "6650:6650"
      - "18080:8080"

  minio:
    image: minio/minio:RELEASE.2020-12-03T00-03-10Z
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"

  zookeeper:
    image: 'bitnami/zookeeper:3.6.3'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:3.1.0'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_MAX_PARTITION_FETCH_BYTES=10485760
      - KAFKA_CFG_MAX_REQUEST_SIZE=10485760
      - KAFKA_CFG_MESSAGE_MAX_BYTES=10485760
      - KAFKA_CFG_REPLICA_FETCH_MAX_BYTES=10485760
      - KAFKA_CFG_FETCH_MESSAGE_MAX_BYTES=10485760
    depends_on:
      - zookeeper
#  zookeeper:
#    image: wurstmeister/zookeeper:latest
#    ports:
#      - "2181:2181"
#
#  kafka:
#    image: wurstmeister/kafka
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_BROKER_ID: 0
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      #KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#      #KAFKA_DELETE_TOPIC_ENABLE: 'true'
#    volumes:
#      - /etc/localtime:/etc/localtime
#      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/kafka:/kafka/data
#    ports:
#      - "9092:9092"

networks:
  default:
    name: milvus_dev
